#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef PAYOLOGYCHECKCAPTURESDK_SWIFT_H
#define PAYOLOGYCHECKCAPTURESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PayologyCheckCaptureSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)












@class NSCoder;
@class NSString;
@class NSBundle;

/// An object that manages a view hierarchy inside the Payology framework.
/// All <code>PayologyViewController</code> subclasses are <code>open</code> and designed to only be initialized inside the Payology application by the use of a <code>PayologyViewControllerConfiguration</code>.
/// Some of these subclasses are displayable by the Payology framework, while others serve as base classes.
/// All <code>PayologyViewController</code> subclasses only suport <code>.portrait</code> as <code>UIInterfaceOrientationMask</code>.
/// If you want to test the layout of customizaded classes, you can use the <code>PayologyInterfaceTester</code> protocol.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK22PayologyViewController")
@interface PayologyViewController : UIViewController
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// Configures all <code>PayologyViewController</code> subclasses for `.portrait orientation.
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


/// A class inherited by view controllers that enable users to enter a monetary amount.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK33PayologyAmountEntryViewController")
@interface PayologyAmountEntryViewController : PayologyViewController
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






/// An object that display and validates a text.
/// <h1>Important Notes</h1>
/// You can use the <code>addTarget</code> method in any <code>PayologyTextField</code> if you want to perform an action when the user edits the text field.
/// To do this, use the <code>addTarget</code> method in the configuration of the <code>PayologyViewController</code> that has an <code>PayologyTextField</code>.
/// <h1>Example of Implementation</h1>
/// \code
/// // In a PayologyViewController that has an PayologyTextField, call a method like this inside viewDidLoad() and create the needed Selectors.
///
/// func setupTextFieldActions() {
///     // If you need an action every time the field editing changes
///     somePayologyTextField.addTarget(self, action: #selector(someEditingChangedMethod), for: .editingChanged)
///
///     // If you need an action every time the field editing ends
///     somePayologyTextField.addTarget(self, action: #selector(someEditingDidEndMethod), for: .editingDidEnd)
/// }
///
/// \endcode
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK17PayologyTextField")
@interface PayologyTextField : UITextField
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// A text field designed for editing a <code>PayologyAmount</code>.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK19PayologyAmountField")
@interface PayologyAmountField : PayologyTextField
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// A control that executes Payology code in response to user interactions.
/// <h1>Important Notes</h1>
/// You can use the <code>addTarget</code> method in any <code>PayologyButton</code> if you want to perform an action when the user taps the button.
/// To do this, use the <code>addTarget</code> method in the configuration of the <code>PayologyViewController</code> that has an <code>PayologyButton</code>.
/// You should not use the <code>removeTarget</code> and <code>removeAction</code> methods of any <code>PayologyButton</code>.
/// This object is intended for exclusive use within the Payology framework. Using it in your own application may result in unintended issues.
/// <h1>Example of Implementation</h1>
/// \code
/// // In a PayologyViewController that has an PayologyButton, call a method like this inside viewDidLoad() and create the needed Selectors.
///
/// func setupButtonActions() {
///     // If you need an action every time the user taps the button
///     somePayologyButton.addTarget(self, action: #selector(someButtonTappedMethod), for: .touchUpInside)
/// }
///
/// \endcode
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK14PayologyButton")
@interface PayologyButton : UIButton
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




/// A class inherited by view controllers designed to enable users to confirm outcomes from a check capture.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK46PayologyCheckCaptureConfirmationViewController")
@interface PayologyCheckCaptureConfirmationViewController : PayologyViewController
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end









/// A class responsible for enabling users to enter a monetary amount and initiating the photo capture of the check.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK39PayologyCheckCaptureEntryViewController")
@interface PayologyCheckCaptureEntryViewController : PayologyAmountEntryViewController
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end







/// A <code>NumberFormatter</code> specifically designed for formatting monetary values in conjunction with Payology components.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK25PayologyCurrencyFormatter")
@interface PayologyCurrencyFormatter : NSNumberFormatter
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// A text field designed for editing a <code>PayologyNumber</code>.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK17PayologyDateField")
@interface PayologyDateField : PayologyTextField
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A text field designed for editing a <code>PayologyNumber</code>.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK18PayologyEmailField")
@interface PayologyEmailField : PayologyTextField
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A class inherited by view controllers tasked with displaying a loading alert.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK29PayologyLoadingViewController")
@interface PayologyLoadingViewController : PayologyViewController
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK18PayologyMenuButton")
@interface PayologyMenuButton : UIButton
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




/// A container utilized by the Payology framework for presenting its view controllers.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK28PayologyNavigationController")
@interface PayologyNavigationController : UINavigationController
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (void)viewWillAppear:(BOOL)animated;
- (void)pushViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


/// A text field designed for editing a <code>PayologyNumber</code>.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK19PayologyNumberField")
@interface PayologyNumberField : PayologyTextField
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A text field designed for editing a <code>PayologyNumber</code>.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK24PayologyPhoneNumberField")
@interface PayologyPhoneNumberField : PayologyTextField
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This is the <code>PayologyViewController</code> displayed before the user can capture a photo in the <code>PayologyPhotoCaptureViewController</code> and is responsible for providing users with tips on how to effectively capture photos.
/// It appears when initiating a new ``PayologyPhotoType` capture process.
/// Some layout customization can be done using its <code>photoCaptureViewController</code> property. While this is an optional property, it is automatically set to the associated <code>PayologyPhotoCaptureViewController</code> immediately after initialization.
/// The photo capture process commences only upon the <code>nextButton</code> action. Therefore, a <code>nextButton</code> must be present in the layout for users to start capturing photos. If absent, the <code>nextButton.triggerButtonAction</code> function should be used to initiate the capture process.
/// <h1>Configuration:</h1>
/// To configure this viewController, override the method <code>viewDidLoad()</code>.
/// Always remeber to call <code>super.viewDidLoad()</code>.
/// Here is an example:
/// \code
/// override func viewDidLoad() {
///     super.viewDidLoad()
///     setupLayout()
/// }
///
/// func setupLayout() {
///     switch photoType {
///     // Setup user interface for each photoType case
///     }
/// }
///
/// \endcode
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK39PayologyPhotoCaptureIntroViewController")
@interface PayologyPhotoCaptureIntroViewController : PayologyViewController
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




/// A class responsible for presenting a loading alert during the review of photo captures by Payology servers.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK41PayologyPhotoCaptureLoadingViewController")
@interface PayologyPhotoCaptureLoadingViewController : PayologyLoadingViewController
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// A class designed to enable users to capture photos for analysis by the Payology image processor.
/// <h1>Configuration:</h1>
/// To configure this viewController, override the method <code>viewDidLoad()</code>.
/// Always remeber to call <code>super.viewDidLoad()</code>.
/// Here is an example:
/// \code
/// override func viewDidLoad() {
///     super.viewDidLoad()
///     setupLayout()
///     setupAutoCaptureTimer()
/// }
///
/// func setupLayout() {
///     // Setup layout design
/// }
///
/// func setupAutoCaptureTimer() {
///     switch photoType {
///     // Assign a autoCaptureDurationInterval for each photoType case
///     }
/// }
///
/// override func willPresentPhotoCaptureIntro(_ photoType: PayologyPhotoType) {
///     super.willPresentPhotoCaptureIntro(photoType)
///     switch photoType {
///     // Update user interface for each photoType case
///     }
/// }
///
/// override func autoCaptureValidationResultDidUpdate(_ validationResult: PhotoCaptureValidationResult, _ photoType: PayologyPhotoType) {
///     super.autoCaptureValidationResultDidUpdate(validationResult, photoType)
///     switch validationResult {
///     // Update user interface for each validationResult case
///     }
/// }
///
/// \endcode<h1>Note:</h1>
/// Camera access permission must be requested before launching this view controller.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK34PayologyPhotoCaptureViewController")
@interface PayologyPhotoCaptureViewController : PayologyViewController
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
@end




@class AVCaptureOutput;
@class AVCaptureConnection;

@interface PayologyPhotoCaptureViewController (SWIFT_EXTENSION(PayologyCheckCaptureSDK)) <AVCaptureVideoDataOutputSampleBufferDelegate>
/// This functions runs in a <code>background</code> Thread.
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end

@class AVCapturePhotoOutput;
@class AVCapturePhoto;

@interface PayologyPhotoCaptureViewController (SWIFT_EXTENSION(PayologyCheckCaptureSDK)) <AVCapturePhotoCaptureDelegate>
/// This function runs in the <code>main</code> Thread.
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)output didFinishProcessingPhoto:(AVCapturePhoto * _Nonnull)photo error:(NSError * _Nullable)error;
@end






@protocol UIViewControllerContextTransitioning;

SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK34PayologySlideAnimatedTransitioning")
@interface PayologySlideAnimatedTransitioning : NSObject <UIViewControllerAnimatedTransitioning>
- (NSTimeInterval)transitionDuration:(id <UIViewControllerContextTransitioning> _Nullable)transitionContext SWIFT_WARN_UNUSED_RESULT;
- (void)animateTransition:(id <UIViewControllerContextTransitioning> _Nonnull)transitionContext;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end






/// A template view designed to create margins, guiding the correct placement of the check for capture.
/// Characterized by masks shading certain areas of the preview layer and an area indicator view, which may include a border.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK25TemplateAreaIndicatorView")
@interface TemplateAreaIndicatorView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK23TemplateBottomSheetView")
@interface TemplateBottomSheetView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




/// A class derived from <code>PayologyCheckCaptureConfirmationViewController</code>, equipped with all the user interface elements necessary for enabling users to confirm outcomes from a check capture.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK46TemplateCheckCaptureConfirmationViewController")
@interface TemplateCheckCaptureConfirmationViewController : PayologyCheckCaptureConfirmationViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// A class derived from <code>PayologyCheckCaptureEntryViewController</code>, equipped with all the user interface elements necessary for enabling users to enter a monetary amount and initiating the photo capture of the check.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK39TemplateCheckCaptureEntryViewController")
@interface TemplateCheckCaptureEntryViewController : PayologyCheckCaptureEntryViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK20TemplateCheckboxView")
@interface TemplateCheckboxView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





/// This is a template view containing an application’s control button.
/// Control buttons are characterized by a predefined size and the capability to display either text or images in their foreground.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK25TemplateControlButtonView")
@interface TemplateControlButtonView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end







/// This is a template view containing an application’s core button.
/// Characterized by a highlight animation upon user interaction, this view responds dynamically to taps.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK22TemplateCoreButtonView")
@interface TemplateCoreButtonView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end







SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK31TemplateHorizontalContainerView")
@interface TemplateHorizontalContainerView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// This is a template view containing an application’s image button.
/// Characterized by a button featuring both text and an image, this view includes a top label positioned above the button and a bottom label, allowing for additional text outside the button.
/// This button also includes a <code>colorConfiguration</code> property, enabling color style adjustments for various scenarios.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK23TemplateImageButtonView")
@interface TemplateImageButtonView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end











SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK28TemplateImageLabelButtonView")
@interface TemplateImageLabelButtonView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





/// A template view featuring a loading alert for the application.
/// Characterized by an activity indicator and a dismiss button that appears if the loading fails.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK19TemplateLoadingView")
@interface TemplateLoadingView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end











/// This is a template view containing an application’s core button.
/// Characterized by a highlight animation upon user interaction, this view responds dynamically to taps.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK22TemplateMenuButtonView")
@interface TemplateMenuButtonView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK28TemplateNavigationButtonView")
@interface TemplateNavigationButtonView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end







/// This is a template view containing an application’s text field.
/// Characterized by a title label, a line view, a subtitle label, and an error label.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK21TemplateTextFieldView")
@interface TemplateTextFieldView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK28TemplatePhoneNumberFieldView")
@interface TemplatePhoneNumberFieldView : TemplateTextFieldView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A template view specifically crafted to show text and buttons that offer guidance for effective photo capturing.
/// Characterized by three labels and both a next and a cancel button.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK29TemplatePhotoCaptureIntroView")
@interface TemplatePhotoCaptureIntroView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end









/// A class derived from <code>PayologyPhotoCaptureIntroViewController</code>, equipped with all the user interface elements necessary for providing users with tips on how to effectively capture photos.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK39TemplatePhotoCaptureIntroViewController")
@interface TemplatePhotoCaptureIntroViewController : PayologyPhotoCaptureIntroViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)didMoveToParentViewController:(UIViewController * _Nullable)parent;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




/// A template view designed to display text in a label during photo capture.
/// The label size is adjusted according to a multiplier of the screen size.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK29TemplatePhotoCaptureLabelView")
@interface TemplatePhotoCaptureLabelView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end











/// A class derived from <code>PayologyPhotoCaptureLoadingViewController</code>, equipped with all the user interface elements necessary for displaying a loading alert while a photo capture is being reviewed by the Payology servers.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK41TemplatePhotoCaptureLoadingViewController")
@interface TemplatePhotoCaptureLoadingViewController : PayologyPhotoCaptureLoadingViewController
- (void)viewDidLoad;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// A class derived from <code>PayologyPhotoCaptureViewController</code>, equipped with all the user interface elements necessary for users to capture photos for analysis by the Payology image processor.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK34TemplatePhotoCaptureViewController")
@interface TemplatePhotoCaptureViewController : PayologyPhotoCaptureViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK21TemplateTableViewCell")
@interface TemplateTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end











@class NSTextContainer;

/// This is a template view containing an application’s text view.
SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK16TemplateTextView")
@interface TemplateTextView : UITextView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer SWIFT_UNAVAILABLE;
@end







SWIFT_CLASS("_TtC23PayologyCheckCaptureSDK17TemplateTitleView")
@interface TemplateTitleView : UIView
/// Payology does not support <em>init(coder:)</em>. This initializer will always fail.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end






































#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
